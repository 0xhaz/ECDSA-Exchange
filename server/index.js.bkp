const express = require('express');
const app = express();
const cors = require('cors');
const port = 3042;
const EC = require('elliptic').ec;
// Create and initialize EC context
const ec = new EC('secp256k1');
// Sign the message's hash using Javascript library
const msgHash = require('crypto-js/sha256');

// localhost can have cross origin errors
// depending on the browser you use!f
app.use(cors());
app.use(express.json());

const wallet1 = ec.genKeyPair();
const wallet2 = ec.genKeyPair();
const wallet3 = ec.genKeyPair();

const pubKey1 = wallet1.getPublic().encode('hex');
const pubKey2 = wallet2.getPublic().encode('hex');
const pubKey3 = wallet3.getPublic().encode('hex');

console.log({
  privateKey: wallet1.getPrivate().toString(16),
  publicKey: wallet1.getPublic().encode('hex'),
});

console.log({
  privateKey: wallet2.getPrivate().toString(16),
  publicKey: wallet2.getPublic().encode('hex'),
})

console.log({
  privateKey: wallet3.getPrivate().toString(16),
  publicKey: wallet3.getPublic().encode('hex'),
})

const balances = { [pubKey1]: 100, [pubKey2]: 50, [pubKey3]: 75 }


app.get('/balance/:address', (req, res) => {
  const {address} = req.params;
  const balance = balances[address] || 0;
  res.send({ balance });
});

app.post('/send', (req, res) => {
  const {sender, recipient, amount} = req.body;
  balances[sender] -= amount;
  balances[recipient] = (balances[recipient] || 0) + +amount;
  res.send({ balance: balances[sender] });
});

app.listen(port, () => {
  console.log(`Listening on port ${port}!`);
});

