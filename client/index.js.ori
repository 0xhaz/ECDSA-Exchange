import "./index.scss";
const EC = require('elliptic').ec;
const msgHash = require('crypto-js/sha256');
const ec = new EC('secp256k1');

const server = "http://localhost:3042";

document.getElementById("exchange-address").addEventListener('input', ({ target: {value} }) => {
  if(value === "") {
    document.getElementById("balance").innerHTML = 0;
    return;
  }

  fetch(`${server}/balance/${value}`).then((response) => {
    return response.json();
  }).then(({ balance }) => {
    document.getElementById("balance").innerHTML = balance;
  });
});

// Need comment
function calculateHash() {
  return SHA256(this.fromAddress + this.toAddress + this.amount).toString();
}

function signTransaction(signingKey){
  if(signingKey.getPublic('hex') !== this.fromAddress) {
    throw new Error('You cannot sign transactions for other wallets!');
  }

  const hashTx = this.calculateHash();
  const sig = signingKey.sign(hashTx, 'base64');
  this.signature = sig.toDER('hex');
}

function isValid(){
  if(this.fromAddress === null) return true;

  if(!this.signature || this.signature.length === 0){
    throw new Error('No signature in this transaction');
  }

  const publicKey = ec.keyFromPublic(this.fromAddress, 'hex');
  return publicKey.verify(this.calculateHash(), this.signature);
}

document.getElementById("transfer-amount").addEventListener('click', () => {
  const sender = document.getElementById("exchange-address").value;
  const amount = document.getElementById("send-amount").value;
  const recipient = document.getElementById("recipient").value;

  const body = JSON.stringify({
    sender, amount, recipient
  });

  const request = new Request(`${server}/send`, { method: 'POST', body });

  fetch(request, { headers: { 'Content-Type': 'application/json' }}).then(response => {
    return response.json();
  }).then(({ balance }) => {
    document.getElementById("balance").innerHTML = balance;
  });
});
